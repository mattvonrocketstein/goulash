{
    "docs": [
        {
            "location": "/", 
            "text": "What IS goulash?\n\n\nWhat IS goulash?  It's sort of like soup, but more viscous, and as for what is actually inside the truth is that no one really knows.  Likewise for this library.  Random odds and ends, common tools and patterns shared by other projects.\n\n\nDetailed API is available \nhere\n, read on for the highlights.\n\n\nInstalling goulash\n\n\nInstall with pypi:\n\n\n   $ pip install goulash\n\n\n\n\nOr try the bleeding edge:\n\n\n   $ git clone https://github.com/mattvonrocketstein/goulash.git\n   $ cd goulash\n   $ virtualenv venv\n   $ source venv/bin/activate\n   $ python setup.py develop\n\n\n\n\nContributing\n\n\nGithub is \nhere\n.  Pull requests welcome.  You might also like to run the tests:\n\n\n  $ cd goulash\n  $ source venv/bin/activate\n  $ pip install tox\n  $ tox\n\n\n\n\nTo rebuild the documentation:\n\n\n  $ cd goulash\n  $ source venv/bin/activate\n  $ goulash-docs --refresh", 
            "title": "Home"
        }, 
        {
            "location": "/#what-is-goulash", 
            "text": "What IS goulash?  It's sort of like soup, but more viscous, and as for what is actually inside the truth is that no one really knows.  Likewise for this library.  Random odds and ends, common tools and patterns shared by other projects.  Detailed API is available  here , read on for the highlights.", 
            "title": "What IS goulash?"
        }, 
        {
            "location": "/#installing-goulash", 
            "text": "Install with pypi:     $ pip install goulash  Or try the bleeding edge:     $ git clone https://github.com/mattvonrocketstein/goulash.git\n   $ cd goulash\n   $ virtualenv venv\n   $ source venv/bin/activate\n   $ python setup.py develop", 
            "title": "Installing goulash"
        }, 
        {
            "location": "/#contributing", 
            "text": "Github is  here .  Pull requests welcome.  You might also like to run the tests:    $ cd goulash\n  $ source venv/bin/activate\n  $ pip install tox\n  $ tox  To rebuild the documentation:    $ cd goulash\n  $ source venv/bin/activate\n  $ goulash-docs --refresh", 
            "title": "Contributing"
        }, 
        {
            "location": "/commands/", 
            "text": "Commands\n\n\nGoulash contains several utility scripts which you may find useful.\n\n\nBoilerplate generators\n\n\nUnder the \ngoulash/data\n directory of the source root, goulash contains boilerplate for various parts of python projects.  You can browse the source \nhere\n, or you can use the commands in the table below to install the boilerplate in place.\n\n\n\n\n\n\n\n\nCommand\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngoulash-boiler --docs $src_root\n\n\nCreate documentation boilerplate in directory \nsrc_root\n\n\n\n\n\n\n\n\nDocumentation helpers\n\n\nGoulash can help with documentation, and it builds clean, static documentation similar to the page you are looking at now.  By default it combines epydoc (for API documentation) and mkdocs (for markdown-based static pages).\n\n\n\n\n\n\n\n\nCommand\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngoulash-docs --boilerplate $doc_root\n\n\nSame as \ngoulash-boiler --docs doc_root\n\n\n\n\n\n\ngoulash-docs --refresh doc_root\n\n\nRefresh and rebuild documentation in directory \ndoc_root\n\n\n\n\n\n\ngoulash-docs --show doc_root\n\n\nRebuild documentation, launch server, open in webbrowser", 
            "title": "Commands"
        }, 
        {
            "location": "/commands/#commands", 
            "text": "Goulash contains several utility scripts which you may find useful.  Boilerplate generators  Under the  goulash/data  directory of the source root, goulash contains boilerplate for various parts of python projects.  You can browse the source  here , or you can use the commands in the table below to install the boilerplate in place.     Command  Description      goulash-boiler --docs $src_root  Create documentation boilerplate in directory  src_root     Documentation helpers  Goulash can help with documentation, and it builds clean, static documentation similar to the page you are looking at now.  By default it combines epydoc (for API documentation) and mkdocs (for markdown-based static pages).     Command  Description      goulash-docs --boilerplate $doc_root  Same as  goulash-boiler --docs doc_root    goulash-docs --refresh doc_root  Refresh and rebuild documentation in directory  doc_root    goulash-docs --show doc_root  Rebuild documentation, launch server, open in webbrowser", 
            "title": "Commands"
        }, 
        {
            "location": "/decorators/", 
            "text": "Decorators", 
            "title": "Decorators"
        }, 
        {
            "location": "/decorators/#decorators", 
            "text": "", 
            "title": "Decorators"
        }, 
        {
            "location": "/api/", 
            "text": "", 
            "title": "API Reference"
        }
    ]
}